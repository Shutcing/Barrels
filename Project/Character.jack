class Character {
    field int location;
    field int orient;

    constructor Character new(int loc) {
        let location = loc;
        let orient = 0;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getLocation(){
        return location;
    }

    method int getOrient(){
        return orient;
    }

    method void setLocation(int newLocation){
        let location = newLocation;
        return;
    }

    method void drawRight(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +1344, 0);
        do Memory.poke(memAddress +1216, 0);
        do Memory.poke(memAddress +1248, 0);
        do Memory.poke(memAddress +1280, 0);
        do Memory.poke(memAddress +1312, 0);
        do Memory.poke(memAddress +1376, ~32767);
        do Memory.poke(memAddress +1408, 16384);
        do Memory.poke(memAddress +1440, -16384);
        // column 1
        do Memory.poke(memAddress +129, -8192);
        do Memory.poke(memAddress +1, 0);
        do Memory.poke(memAddress +33, 0);
        do Memory.poke(memAddress +65, 0);
        do Memory.poke(memAddress +97, 0);
        do Memory.poke(memAddress +161, 7168);
        do Memory.poke(memAddress +193, 512);
        do Memory.poke(memAddress +225, 256);
        do Memory.poke(memAddress +257, 128);
        do Memory.poke(memAddress +289, 64);
        do Memory.poke(memAddress +321, 24640);
        do Memory.poke(memAddress +353, 16416);
        do Memory.poke(memAddress +385, -7152);
        do Memory.poke(memAddress +417, 13320);
        do Memory.poke(memAddress +449, -14076);
        do Memory.poke(memAddress +481, 14596);
        do Memory.poke(memAddress +513, 1796);
        do Memory.poke(memAddress +545, 964);
        do Memory.poke(memAddress +577, -3614);
        do Memory.poke(memAddress +609, -1798);
        do Memory.poke(memAddress +641, -3190);
        do Memory.poke(memAddress +673, -7734);
        do Memory.poke(memAddress +705, -16182);
        do Memory.poke(memAddress +737, -16214);
        do Memory.poke(memAddress +769, 154);
        do Memory.poke(memAddress +801, 162);
        do Memory.poke(memAddress +833, 324);
        do Memory.poke(memAddress +865, 392);
        do Memory.poke(memAddress +897, 16);
        do Memory.poke(memAddress +929, 80);
        do Memory.poke(memAddress +961, 208);
        do Memory.poke(memAddress +993, 32);
        do Memory.poke(memAddress +1025, 64);
        do Memory.poke(memAddress +1057, 3712);
        do Memory.poke(memAddress +1089, 6528);
        do Memory.poke(memAddress +1121, 12928);
        do Memory.poke(memAddress +1153, -7552);
        do Memory.poke(memAddress +1185, -32128);
        do Memory.poke(memAddress +1217, 608);
        do Memory.poke(memAddress +1249, 536);
        do Memory.poke(memAddress +1281, 1544);
        do Memory.poke(memAddress +1313, 1540);
        do Memory.poke(memAddress +1345, 1795);
        do Memory.poke(memAddress +1377, 2016);
        do Memory.poke(memAddress +1409, 2016);
        do Memory.poke(memAddress +1441, -1);
        // column 2
        do Memory.poke(memAddress +130, 15);
        do Memory.poke(memAddress +2, 0);
        do Memory.poke(memAddress +34, 0);
        do Memory.poke(memAddress +66, 0);
        do Memory.poke(memAddress +98, 0);
        do Memory.poke(memAddress +162, 48);
        do Memory.poke(memAddress +194, 64);
        do Memory.poke(memAddress +226, 128);
        do Memory.poke(memAddress +258, 256);
        do Memory.poke(memAddress +290, 576);
        do Memory.poke(memAddress +322, 3110);
        do Memory.poke(memAddress +354, 2150);
        do Memory.poke(memAddress +386, 2550);
        do Memory.poke(memAddress +418, 2815);
        do Memory.poke(memAddress +450, 2816);
        do Memory.poke(memAddress +482, 3072);
        do Memory.poke(memAddress +514, 12288);
        do Memory.poke(memAddress +546, 16384);
        do Memory.poke(memAddress +578, 32719);
        do Memory.poke(memAddress +610, 16383);
        do Memory.poke(memAddress +642, 16287);
        do Memory.poke(memAddress +674, 16287);
        do Memory.poke(memAddress +706, 7951);
        do Memory.poke(memAddress +738, 5903);
        do Memory.poke(memAddress +770, 4608);
        do Memory.poke(memAddress +802, 4384);
        do Memory.poke(memAddress +834, 4096);
        do Memory.poke(memAddress +866, 4096);
        do Memory.poke(memAddress +898, 4096);
        do Memory.poke(memAddress +930, 5088);
        do Memory.poke(memAddress +962, 4112);
        do Memory.poke(memAddress +994, 4096);
        do Memory.poke(memAddress +1026, 12288);
        do Memory.poke(memAddress +1058, 20480);
        do Memory.poke(memAddress +1090, -30720);
        do Memory.poke(memAddress +1122, 2048);
        do Memory.poke(memAddress +1154, 5120);
        do Memory.poke(memAddress +1186, 8961);
        do Memory.poke(memAddress +1218, 8446);
        do Memory.poke(memAddress +1250, 8446);
        do Memory.poke(memAddress +1282, 8192);
        do Memory.poke(memAddress +1314, 24576);
        do Memory.poke(memAddress +1346, 24576);
        do Memory.poke(memAddress +1378, -8192);
        do Memory.poke(memAddress +1410, -8192);
        do Memory.poke(memAddress +1442, -1);
        // column 3
        do Memory.poke(memAddress +1091, 3);
        do Memory.poke(memAddress +963, 0);
        do Memory.poke(memAddress +995, 0);
        do Memory.poke(memAddress +1027, 0);
        do Memory.poke(memAddress +1059, 0);
        do Memory.poke(memAddress +1123, 4);
        do Memory.poke(memAddress +1155, 4);
        do Memory.poke(memAddress +1187, 4);
        do Memory.poke(memAddress +1219, 4);
        do Memory.poke(memAddress +1251, 4);
        do Memory.poke(memAddress +1283, 4);
        do Memory.poke(memAddress +1315, 4);
        do Memory.poke(memAddress +1347, 4);
        do Memory.poke(memAddress +1379, 4);
        do Memory.poke(memAddress +1411, 4);
        do Memory.poke(memAddress +1443, 7);
        return;
    }

    method void removeRight(int location) {
        var int memAddress; 
        let memAddress = 16384+location;
        // column 0
        do Memory.poke(memAddress +1344, 0);
        do Memory.poke(memAddress +1216, 0);
        do Memory.poke(memAddress +1248, 0);
        do Memory.poke(memAddress +1280, 0);
        do Memory.poke(memAddress +1312, 0);
        do Memory.poke(memAddress +1376, 0);
        do Memory.poke(memAddress +1408, 0);
        do Memory.poke(memAddress +1440, 0);
        // column 1
        do Memory.poke(memAddress +129, 0);
        do Memory.poke(memAddress +1, 0);
        do Memory.poke(memAddress +33, 0);
        do Memory.poke(memAddress +65, 0);
        do Memory.poke(memAddress +97, 0);
        do Memory.poke(memAddress +161, 0);
        do Memory.poke(memAddress +193, 0);
        do Memory.poke(memAddress +225, 0);
        do Memory.poke(memAddress +257, 0);
        do Memory.poke(memAddress +289, 0);
        do Memory.poke(memAddress +321, 0);
        do Memory.poke(memAddress +353, 0);
        do Memory.poke(memAddress +385, 0);
        do Memory.poke(memAddress +417, 0);
        do Memory.poke(memAddress +449, 0);
        do Memory.poke(memAddress +481, 0);
        do Memory.poke(memAddress +513, 0);
        do Memory.poke(memAddress +545, 0);
        do Memory.poke(memAddress +577, 0);
        do Memory.poke(memAddress +609, 0);
        do Memory.poke(memAddress +641, 0);
        do Memory.poke(memAddress +673, 0);
        do Memory.poke(memAddress +705, 0);
        do Memory.poke(memAddress +737, 0);
        do Memory.poke(memAddress +769, 0);
        do Memory.poke(memAddress +801, 0);
        do Memory.poke(memAddress +833, 0);
        do Memory.poke(memAddress +865, 0);
        do Memory.poke(memAddress +897, 0);
        do Memory.poke(memAddress +929, 0);
        do Memory.poke(memAddress +961, 0);
        do Memory.poke(memAddress +993, 0);
        do Memory.poke(memAddress +1025, 0);
        do Memory.poke(memAddress +1057, 0);
        do Memory.poke(memAddress +1089, 0);
        do Memory.poke(memAddress +1121, 0);
        do Memory.poke(memAddress +1153, 0);
        do Memory.poke(memAddress +1185, 0);
        do Memory.poke(memAddress +1217, 0);
        do Memory.poke(memAddress +1249, 0);
        do Memory.poke(memAddress +1281, 0);
        do Memory.poke(memAddress +1313, 0);
        do Memory.poke(memAddress +1345, 0);
        do Memory.poke(memAddress +1377, 0);
        do Memory.poke(memAddress +1409, 0);
        do Memory.poke(memAddress +1441, 0);
        // column 2
        do Memory.poke(memAddress +130, 0);
        do Memory.poke(memAddress +2, 0);
        do Memory.poke(memAddress +34, 0);
        do Memory.poke(memAddress +66, 0);
        do Memory.poke(memAddress +98, 0);
        do Memory.poke(memAddress +162, 0);
        do Memory.poke(memAddress +194, 0);
        do Memory.poke(memAddress +226, 0);
        do Memory.poke(memAddress +258, 0);
        do Memory.poke(memAddress +290, 0);
        do Memory.poke(memAddress +322, 0);
        do Memory.poke(memAddress +354, 0);
        do Memory.poke(memAddress +386, 0);
        do Memory.poke(memAddress +418, 0);
        do Memory.poke(memAddress +450, 0);
        do Memory.poke(memAddress +482, 0);
        do Memory.poke(memAddress +514, 0);
        do Memory.poke(memAddress +546, 0);
        do Memory.poke(memAddress +578, 0);
        do Memory.poke(memAddress +610, 0);
        do Memory.poke(memAddress +642, 0);
        do Memory.poke(memAddress +674, 0);
        do Memory.poke(memAddress +706, 0);
        do Memory.poke(memAddress +738, 0);
        do Memory.poke(memAddress +770, 0);
        do Memory.poke(memAddress +802, 0);
        do Memory.poke(memAddress +834, 0);
        do Memory.poke(memAddress +866, 0);
        do Memory.poke(memAddress +898, 0);
        do Memory.poke(memAddress +930, 0);
        do Memory.poke(memAddress +962, 0);
        do Memory.poke(memAddress +994, 0);
        do Memory.poke(memAddress +1026, 0);
        do Memory.poke(memAddress +1058, 0);
        do Memory.poke(memAddress +1090, 0);
        do Memory.poke(memAddress +1122, 0);
        do Memory.poke(memAddress +1154, 0);
        do Memory.poke(memAddress +1186, 0);
        do Memory.poke(memAddress +1218, 0);
        do Memory.poke(memAddress +1250, 0);
        do Memory.poke(memAddress +1282, 0);
        do Memory.poke(memAddress +1314, 0);
        do Memory.poke(memAddress +1346, 0);
        do Memory.poke(memAddress +1378, 0);
        do Memory.poke(memAddress +1410, 0);
        do Memory.poke(memAddress +1442, 0);
        // column 3
        do Memory.poke(memAddress +1091, 0);
        do Memory.poke(memAddress +963, 0);
        do Memory.poke(memAddress +995, 0);
        do Memory.poke(memAddress +1027, 0);
        do Memory.poke(memAddress +1059, 0);
        do Memory.poke(memAddress +1123, 0);
        do Memory.poke(memAddress +1155, 0);
        do Memory.poke(memAddress +1187, 0);
        do Memory.poke(memAddress +1219, 0);
        do Memory.poke(memAddress +1251, 0);
        do Memory.poke(memAddress +1283, 0);
        do Memory.poke(memAddress +1315, 0);
        do Memory.poke(memAddress +1347, 0);
        do Memory.poke(memAddress +1379, 0);
        do Memory.poke(memAddress +1411, 0);
        do Memory.poke(memAddress +1443, 0);
        return;
    }

    method void drawLeft(int location) {
        var int memAddress; 
        let memAddress = 16512+location;
        // column 0
        do Memory.poke(memAddress, ~32767);
        do Memory.poke(memAddress +32, 24576);
        do Memory.poke(memAddress +64, 4096);
        do Memory.poke(memAddress +96, 2048);
        do Memory.poke(memAddress +128, 17408);
        do Memory.poke(memAddress +160, 25088);
        do Memory.poke(memAddress +192, -3712);
        do Memory.poke(memAddress +224, -14208);
        do Memory.poke(memAddress +256, -21376);
        do Memory.poke(memAddress +288, -1408);
        do Memory.poke(memAddress +320, 1664);
        do Memory.poke(memAddress +352, 384);
        do Memory.poke(memAddress +384, 96);
        do Memory.poke(memAddress +416, 16);
        do Memory.poke(memAddress +448, -24592);
        do Memory.poke(memAddress +480, -32);
        do Memory.poke(memAddress +512, -12320);
        do Memory.poke(memAddress +544, -12320);
        do Memory.poke(memAddress +576, -30784);
        do Memory.poke(memAddress +608, -30912);
        do Memory.poke(memAddress +640, 576);
        do Memory.poke(memAddress +672, 9280);
        do Memory.poke(memAddress +704, 64);
        do Memory.poke(memAddress +736, 64);
        do Memory.poke(memAddress +768, 64);
        do Memory.poke(memAddress +800, 15936);
        do Memory.poke(memAddress +832, 16448);
        do Memory.poke(memAddress +864, 96);
        do Memory.poke(memAddress +896, 80);
        do Memory.poke(memAddress +928, 142);
        do Memory.poke(memAddress +960, 129);
        do Memory.poke(memAddress +992, 321);
        do Memory.poke(memAddress +1024, 1569);
        do Memory.poke(memAddress +1056, -2015);
        do Memory.poke(memAddress +1088, -2015);
        do Memory.poke(memAddress +1120, 33);
        do Memory.poke(memAddress +1152, 49);
        do Memory.poke(memAddress +1184, 49);
        do Memory.poke(memAddress +1216, 57);
        do Memory.poke(memAddress +1248, 57);
        do Memory.poke(memAddress +1280, -1);
        // column 1
        do Memory.poke(memAddress +1, 63);
        do Memory.poke(memAddress +33, 448);
        do Memory.poke(memAddress +65, 1536);
        do Memory.poke(memAddress +97, 2048);
        do Memory.poke(memAddress +129, 4102);
        do Memory.poke(memAddress +161, 4134);
        do Memory.poke(memAddress +193, 8310);
        do Memory.poke(memAddress +225, 16463);
        do Memory.poke(memAddress +257, -32528);
        do Memory.poke(memAddress +289, 311);
        do Memory.poke(memAddress +321, 2456);
        do Memory.poke(memAddress +353, 3808);
        do Memory.poke(memAddress +385, 7552);
        do Memory.poke(memAddress +417, 14592);
        do Memory.poke(memAddress +449, 31359);
        do Memory.poke(memAddress +481, 29951);
        do Memory.poke(memAddress +513, 30591);
        do Memory.poke(memAddress +545, 28223);
        do Memory.poke(memAddress +577, 27679);
        do Memory.poke(memAddress +609, 21519);
        do Memory.poke(memAddress +641, 25600);
        do Memory.poke(memAddress +673, 5120);
        do Memory.poke(memAddress +705, -30208);
        do Memory.poke(memAddress +737, 17920);
        do Memory.poke(memAddress +769, 20480);
        do Memory.poke(memAddress +801, 22528);
        do Memory.poke(memAddress +833, 8192);
        do Memory.poke(memAddress +865, 4096);
        do Memory.poke(memAddress +897, 2944);
        do Memory.poke(memAddress +929, 3264);
        do Memory.poke(memAddress +961, 2656);
        do Memory.poke(memAddress +993, 2616);
        do Memory.poke(memAddress +1025, 2572);
        do Memory.poke(memAddress +1057, 12803);
        do Memory.poke(memAddress +1089, -15869);
        do Memory.poke(memAddress +1121, -32000);
        do Memory.poke(memAddress +1153, 768);
        do Memory.poke(memAddress +1185, 768);
        do Memory.poke(memAddress +1217, 768);
        do Memory.poke(memAddress +1249, 768);
        do Memory.poke(memAddress +1281, -1);
        // column 2
        do Memory.poke(memAddress +290, 1);
        do Memory.poke(memAddress +322, 1);
        do Memory.poke(memAddress +354, 1);
        do Memory.poke(memAddress +386, 1);
        do Memory.poke(memAddress +418, 2);
        do Memory.poke(memAddress +450, 2);
        do Memory.poke(memAddress +482, 2);
        do Memory.poke(memAddress +514, 2);
        do Memory.poke(memAddress +546, 2);
        do Memory.poke(memAddress +578, 2);
        do Memory.poke(memAddress +610, 2);
        do Memory.poke(memAddress +642, 2);
        do Memory.poke(memAddress +674, 1);
        do Memory.poke(memAddress +770, 4);
        do Memory.poke(memAddress +1154, 1);
        do Memory.poke(memAddress +1186, 6);
        do Memory.poke(memAddress +1218, 8);
        do Memory.poke(memAddress +1250, 16);
        do Memory.poke(memAddress +1282, 31);
	    return;
    }

    method void removeLeft(int location) {
        var int memAddress; 
        let memAddress = 16512+location;
        // column 0
        do Memory.poke(memAddress, 0);
        do Memory.poke(memAddress +32, 0);
        do Memory.poke(memAddress +64, 0);
        do Memory.poke(memAddress +96, 0);
        do Memory.poke(memAddress +128, 0);
        do Memory.poke(memAddress +160, 0);
        do Memory.poke(memAddress +192, 0);
        do Memory.poke(memAddress +224, 0);
        do Memory.poke(memAddress +256, 0);
        do Memory.poke(memAddress +288, 0);
        do Memory.poke(memAddress +320, 0);
        do Memory.poke(memAddress +352, 0);
        do Memory.poke(memAddress +384, 0);
        do Memory.poke(memAddress +416, 0);
        do Memory.poke(memAddress +448, 0);
        do Memory.poke(memAddress +480, 0);
        do Memory.poke(memAddress +512, 0);
        do Memory.poke(memAddress +544, 0);
        do Memory.poke(memAddress +576, 0);
        do Memory.poke(memAddress +608, 0);
        do Memory.poke(memAddress +640, 0);
        do Memory.poke(memAddress +672, 0);
        do Memory.poke(memAddress +704, 0);
        do Memory.poke(memAddress +736, 0);
        do Memory.poke(memAddress +768, 0);
        do Memory.poke(memAddress +800, 0);
        do Memory.poke(memAddress +832, 0);
        do Memory.poke(memAddress +864, 0);
        do Memory.poke(memAddress +896, 0);
        do Memory.poke(memAddress +928, 0);
        do Memory.poke(memAddress +960, 0);
        do Memory.poke(memAddress +992, 0);
        do Memory.poke(memAddress +1024, 0);
        do Memory.poke(memAddress +1056, 0);
        do Memory.poke(memAddress +1088, 0);
        do Memory.poke(memAddress +1120, 0);
        do Memory.poke(memAddress +1152, 0);
        do Memory.poke(memAddress +1184, 0);
        do Memory.poke(memAddress +1216, 0);
        do Memory.poke(memAddress +1248, 0);
        do Memory.poke(memAddress +1280, 0);
        // column 1
        do Memory.poke(memAddress +1, 0);
        do Memory.poke(memAddress +33, 0);
        do Memory.poke(memAddress +65, 0);
        do Memory.poke(memAddress +97, 0);
        do Memory.poke(memAddress +129, 0);
        do Memory.poke(memAddress +161, 0);
        do Memory.poke(memAddress +193, 0);
        do Memory.poke(memAddress +225, 0);
        do Memory.poke(memAddress +257, 0);
        do Memory.poke(memAddress +289, 0);
        do Memory.poke(memAddress +321, 0);
        do Memory.poke(memAddress +353, 0);
        do Memory.poke(memAddress +385, 0);
        do Memory.poke(memAddress +417, 0);
        do Memory.poke(memAddress +449, 0);
        do Memory.poke(memAddress +481, 0);
        do Memory.poke(memAddress +513, 0);
        do Memory.poke(memAddress +545, 0);
        do Memory.poke(memAddress +577, 0);
        do Memory.poke(memAddress +609, 0);
        do Memory.poke(memAddress +641, 0);
        do Memory.poke(memAddress +673, 0);
        do Memory.poke(memAddress +705, 0);
        do Memory.poke(memAddress +737, 0);
        do Memory.poke(memAddress +769, 0);
        do Memory.poke(memAddress +801, 0);
        do Memory.poke(memAddress +833,  0);
        do Memory.poke(memAddress +865, 0);
        do Memory.poke(memAddress +897,  0);
        do Memory.poke(memAddress +929, 0);
        do Memory.poke(memAddress +961, 0);
        do Memory.poke(memAddress +993, 0);
        do Memory.poke(memAddress +1025, 0);
        do Memory.poke(memAddress +1057, 0);
        do Memory.poke(memAddress +1089, 0);
        do Memory.poke(memAddress +1121, 0);
        do Memory.poke(memAddress +1153, 0);
        do Memory.poke(memAddress +1185, 0);
        do Memory.poke(memAddress +1217, 0);
        do Memory.poke(memAddress +1249, 0);
        do Memory.poke(memAddress +1281, 0);
        // column 2
        do Memory.poke(memAddress +290, 0);
        do Memory.poke(memAddress +322, 0);
        do Memory.poke(memAddress +354, 0);
        do Memory.poke(memAddress +386, 0);
        do Memory.poke(memAddress +418, 0);
        do Memory.poke(memAddress +450, 0);
        do Memory.poke(memAddress +482, 0);
        do Memory.poke(memAddress +514, 0);
        do Memory.poke(memAddress +546, 0);
        do Memory.poke(memAddress +578, 0);
        do Memory.poke(memAddress +610, 0);
        do Memory.poke(memAddress +642, 0);
        do Memory.poke(memAddress +674, 0);
        do Memory.poke(memAddress +770, 0);
        do Memory.poke(memAddress +1154, 0);
        do Memory.poke(memAddress +1186, 0);
        do Memory.poke(memAddress +1218, 0);
        do Memory.poke(memAddress +1250, 0);
        do Memory.poke(memAddress +1282, 0);
	    return;
    }


    method void display() {
        do drawLeft(location);
        return;
    }

    method void hide() {
        if (orient = 1){
            do removeRight(location);
        }
        else{
            do removeLeft(location);
        }
        
        return;
    }

    method void move(int direction) {
        if (direction = 2) {
            if (location - ((location / 32)*32) < 28){
                do hide();
                do drawRight(location + 1);
                let location = location + 1;
                let orient = 1;
            }
        }
        if (direction = 1) {
            if (location - ((location / 32)*32) > 0) {
                do hide();
                do drawLeft(location - 1);
                let location = location - 1;
                let orient = 0;
            }
        }
        if (direction = 3) {
            if (location > 64) {
                do hide();
                if (orient = 1){
                    do drawRight(location - 1344);
                }
                else{
                    do drawLeft(location - 1344);
                }
                let location = location - 1344;
            }
        }
        do Sys.wait(25);

        return;
    }

    method int gravity(int location, Array colors){
        let colors[0] = Memory.peek(location + 1506 + 16384);
        let colors[1] = Memory.peek(location + 1538 + 16384);
        let colors[2] = Memory.peek(location + 1570 + 16384);
        if ((colors[0] + colors[1] + colors[2]) = 0){
            do hide();
            if (orient = 1){
                do drawRight(location + 64);
            }
            else{
                do drawLeft(location + 64);
            }
            let location = location + 64;
        }
        return location;
    }

}